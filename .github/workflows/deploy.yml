name: Deploy to GitHub Pages

on:
  push:
    branches: 'main'
  workflow_dispatch:

jobs:
  build_site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.13.0
        with:
          enable-cache: 'true'

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: |
            node_modules/
            package-lock.json
          key: "${{ runner.os }}-${{ runner.arch }}-npm-${{ hashFiles('package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-npm-${{ hashFiles('package-lock.json') }}
            ${{ runner.os }}-npm-

      - name: Install NPM packages
        run: devbox run npm-install

      - name: Sync SvelteKit
        run: devbox run -- npx svelte-kit sync

      - name: Run unit tests
        run: devbox run -- npm run test:unit

      - name: build
        env:
          BASE_PATH: '/'
        run: |
          devbox run -- npm run build

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          # this should match the `pages` option in your adapter-static options
          path: 'build/'

  e2e_testing:
    needs: build_site
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: |
            node_modules/
            package-lock.json
          key: "${{ runner.os }}-${{ runner.arch }}-npm-${{ hashFiles('package-lock.json') }}"
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-npm-${{ hashFiles('package-lock.json') }}
            ${{ runner.os }}-npm-

      - name: Install Playwright with browsers
        run: npx playwright install --with-deps chromium

      - name: Install NPM packages with dev dependencies
        run: npm install

      - name: Run e2e tests
        run: npm run test:e2e

  deploy:
    needs: [build_site, e2e_testing]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
